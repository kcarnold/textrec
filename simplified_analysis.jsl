dt_all = Open(	"/Users/kcarnold/thesis/textrec/data/analyzed/combined_data.csv",	Charset( "utf-8" ),);// Set data typesColumn( dt_all, "stimulus" ) << Data Type( "Character" ) << Modeling Type( "Nominal" );// "The last level is the level with the highest value order coding; it is the level whose indicator function is not included in the model." (https://www.jmp.com/support/help/14/indicator-parameterization-estimates.shtml)Column( dt_all, "condition" ) << Set Property( "Value Ordering", {"contextual", "gated", "standard", "norecs"} );// Formulasdt_all << New Column( "frac_BOW_recs", Numeric, Formula( :corrected_bow_recs_idealuse_standard / :num_words ) );// Master data filterdata = Subset(	dt_all,	Rows( dt_all << get rows where( :participant != "pr5hff" & :participant != "7q253f")));Close( dt_all );data << Set Name( "Combined Data" );// Subsets by experimentdt_gc1 = data << Subset(Rows(data << get rows where ( :experiment == "gc1")));dt_gc1 << Set Name("gc1");Wait(0);dt_specs = data << Subset(Rows(data << get rows where ( :experiment != "gc1")));dt_specs << Set Name("specs");// Main analysis function// extra_toplevel is stuff like Where(condition != "norecs")// extra_effects is stuff like ", :chars_per_sec_norecs_log "analyze = Function( {dt, response_name, window_title, extra_toplevel = "", extra_effects = ""},	{s, resp},	s = "New Window( \!"" || window_title || " (" || (dt << get name()) || ")" || "\!",		dt << Graph Builder(			Show Control Panel( 0 ),			Variables( X( :condition ), Y( :" || response_name ||	")),			Elements( Bar( X, Y, Legend( 4 ), Error Bars( \!"Standard Error\!" ), Label( \!"Label by Value\!" ) ) ),			SendToReport( 				Dispatch( {}, \!"Y title\!", TextEditBox, {Set Text( \!""	 || window_title ||	"\!")} ) ,				Dispatch( {}, \!"graph title\!", TextEditBox, {Set Text( \!"\!" )} ),			)		),		resp = dt << Fit Model(			Y( :"	 || response_name || " ),			Effects( :condition_order, :condition, :block, :idx_in_block" || extra_effects ||	"),			Random Effects( :participant, :participant * :condition, :stimulus, :stimulus * :condition),			NoBounds( 1 ),			Personality( \!"Standard Least Squares\!" ),			Method( \!"REML\!" ),			Emphasis( \!"Minimal Report\!" ),			Run(				Name( \!""	 || response_name ||	"\!" ) << {Summary of Fit( 1 ), Analysis of Variance( 0 ), Parameter Estimates( 1 ), Lack of Fit( 0 ),				Show Prediction Expression( 1 ), Plot Actual by Predicted( 0 ), Plot Regression( 0 ), Plot Residual by Predicted( 0 ),				Plot Studentized Residuals( 0 ), Plot Residual by Normal Quantiles( 1 ), 				Plot Effect Leverage( 0 ), Show All Confidence Intervals( 1 ), {:condition <<				{LSMeans Tukey HSD( 0.05 ), Ordered Differences Report( 1 )}}}			),			SendToReport( Dispatch( \!"Response "	 || response_name || "\!", \!"Effect Details\!", OutlineBox, {Close( 0 )} ) ),			" || extra_toplevel || "		)	)";	Show( s );	Eval( Parse( s ) );	resp;);analyze_all = Function( {response_name, window_title, extra_toplevel = "", extra_effects = ""},	analyze(dt_gc1, response_name, window_title, extra_toplevel=extra_toplevel, extra_effects=extra_effects);	analyze(dt_specs, response_name, window_title, extra_toplevel=extra_toplevel, extra_effects=extra_effects););analyze_all("num_words", "Number of words written");analyze(dt_gc1, "corrected_bow_recs_idealuse_standard", "Number of words matching a full-word Standard prediction");analyze(dt_specs, "corrected_bow_recs_idealuse_standard", "Number of words matching a full-word Standard prediction");analyze(dt_gc1, "frac_BOW_recs", "Fraction of words matching a full-word Standard prediction");analyze(dt_specs, "frac_BOW_recs", "Fraction of words matching a full-word Standard prediction");